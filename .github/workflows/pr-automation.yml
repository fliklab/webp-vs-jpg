name: JSON Config-based Experiment Automation

on:
  push:
    branches:
      - main
    paths:
      - "queue/**.json"
  workflow_dispatch: # 워크플로우 수동 실행을 위한 트리거

jobs:
  automate-experiment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # main 브랜치의 전체 기록을 가져와야 마지막 실험 번호를 찾을 수 있음
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Find JSON files to process
        id: find_json
        run: |
          JSON_FILES=""
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "Push event detected. Finding new JSON files."
            JSON_FILES=$(git diff --name-only --diff-filter=A ${{ github.event.before }} ${{ github.event.after }} -- 'queue/*.json')
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual dispatch detected. Finding all JSON files in queue."
            JSON_FILES=$(find queue -maxdepth 1 -type f -name "*.json" 2>/dev/null || true)
          fi

          if [ -z "$JSON_FILES" ]; then
            echo "No JSON files to process."
            echo "has_files=false" >> $GITHUB_OUTPUT
          else
            echo "Files to be processed:"
            echo "$JSON_FILES"
            echo "has_files=true" >> $GITHUB_OUTPUT
            echo "json_paths<<EOF" >> $GITHUB_OUTPUT
            echo "$JSON_FILES" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Process All Experiments
        if: steps.find_json.outputs.has_files == 'true'
        id: experiment
        env:
          JSON_PATHS: ${{ steps.find_json.outputs.json_paths }}
        run: |
          echo "$JSON_PATHS" | while IFS= read -r JSON_PATH; do
            if [ -z "$JSON_PATH" ]; then
              continue
            fi
            
            echo "--- Processing: ${JSON_PATH} ---"
            CONFIG_JSON=$(cat "$JSON_PATH")
            EXPERIMENT_NAME=$(basename "$JSON_PATH" .json)

            # 1. Init Experiment
            npm run init-experiment -- "$EXPERIMENT_NAME"
            
            # 2. Get the path of the directory just created
            EXPERIMENT_DIR_PATH=$(ls -td experiments/*/ | head -n 1 | sed 's:/*$::')

            # 3. Copy source image
            SOURCE_PATH=$(echo "$CONFIG_JSON" | jq -r .source)
            IMAGE_FILENAME=$(basename "$SOURCE_PATH")
            mkdir -p "$EXPERIMENT_DIR_PATH/image"
            cp "$SOURCE_PATH" "$EXPERIMENT_DIR_PATH/image/$IMAGE_FILENAME"
            
            NEW_IMAGE_PATH="$EXPERIMENT_DIR_PATH/image/$IMAGE_FILENAME"
            
            # 4. Convert images based on config
            echo "$CONFIG_JSON" | jq -c '.tasks[]' | while read -r task; do
              # task 객체를 터미널에 안전하게 전달하기 위해 ' 이스케이프
              ESCAPED_TASK=$(echo "$task" | sed "s/'/'\\\\''/g")

              # npm run convert를 사용하거나, loader를 직접 명시
              npm run convert -- \
                --source "$NEW_IMAGE_PATH" \
                --task "'$ESCAPED_TASK'" \
                --outputDir "$EXPERIMENT_DIR_PATH/image"
            done
            
            # 5. Generate report
            npm run generate-report -- --path "$EXPERIMENT_DIR_PATH"
            
            # 6. Move processed json file to the result directory
            mv "$JSON_PATH" "$EXPERIMENT_DIR_PATH/"
            echo "Finished processing ${JSON_PATH}. Moved to ${EXPERIMENT_DIR_PATH}/"
          done

      - name: Commit and Push Changes
        if: steps.find_json.outputs.has_files == 'true'
        run: |
          # 7. Update README with all new experiments
          npm run update-readme

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add .

          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "feat: auto-generate new experiment results"
            git push
          fi
